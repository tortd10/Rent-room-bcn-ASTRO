---
// Importar dependencias necesarias
import SectionContainer from "./SectionContainer.astro";
import i18next from '../i18n/config.js';

// Definir los tipos para los datos de traducci√≥n
interface Article {
  class: string;
  title: string;
  content: string;
}

interface AboutRooms {
  title: string;
  description: string;
  articles: Article[];
}

const lang = Astro.params.lang || 'es';  // Obtener el idioma de la URL
const translations = i18next.getResourceBundle(lang, 'translation');

// Asegurarse de que las traducciones sean del tipo correcto
const aboutRooms: AboutRooms = translations.aboutRooms;
---

<SectionContainer class="px-4">
  <div class="flex flex-col items-center text-center pb-8">
    <h1 class="font-black text-balance tracking-tight text-4xl sm:text-5xl md:text-6xl lg:text-5xl text-primary">
      {aboutRooms.title}
    </h1>
    <h2 class="mt-6 text-balance text-texth2 text-lg sm:text-xl md:text-2xl lg:text-3xl">
      {aboutRooms.description}
    </h2>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    {aboutRooms.articles.map(({ class: className, title, content }, index) => (
      <div
        class:list={[
          index === 0
            ? "md:col-span-2 md:row-span-1"
            : index === 1
            ? "md:row-span-2"
            : "md:col-span-1",
          "w-full rounded-lg overflow-hidden relative group shadow-md hover:shadow-lg transition-shadow duration-300",
          className,
        ]}
      >
        <div class="p-4 flex flex-col justify-start h-full">
          <h3 class="text-xl font-bold text-primary mb-2">{title}</h3>
          <p class="text-sm text-texth2">{content}</p>
        </div>
      </div>
    ))}
  </div>
</SectionContainer>
